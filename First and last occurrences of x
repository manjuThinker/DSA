import java.util.*;

public class lastoccurrencesofX {
    ArrayList<Long> find(long arr[], int n, int x) {
       /* List al = Arrays.asList(arr);*/
     /*   ArrayList<Long> array=new ArrayList<Long>();
        for (int i = 0; i < arr.length; i++) {
            array.add(Long.valueOf(arr[i]));
        }
        System.out.print(array);
        *//*ArrayList<Long> array2=new ArrayList<Long>();*//*
       *//* Long.valueOf(array.indexOf(x));
        Long.valueOf(array.lastIndexOf(x));*//*
        return array.indexOf(x);*/

        ArrayList<Long> arrlist=new ArrayList<>();

        long first=-1;
        long last=-1;
        for(int i=0;i<n;i++) {
            if(arr[i]==x) {
                first=i;
                break;
            }
        }

        for(int i=n-1;i>=0;i--) {
            if(arr[i]==x) {
                last=i;
                break;
            }
        }

        arrlist.add(first);
        arrlist.add(last);
        return arrlist;
    }
    public static void main(String args[]) {
        lastoccurrencesofX X = new lastoccurrencesofX();
        long[] C = {1,1,2,2,2,2, 6, 3, 8, 67, 8378, 87};
        long[] B = {1, 2, 3, 9};
        /*X.find(C, C.length,5);*/
        System.out.println(X.find(C, C.length,2));
        System.out.println(B.length);
    }
}
