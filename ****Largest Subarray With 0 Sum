
import java.util.*;
class LargestSubarrayWithZeroSum {

    int maxLen(int arr[], int n) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int sum = 0;
        int len = 0;
        for (int j = 0; j < n; j++) {
            sum += arr[j];
           if(sum==0){
               len=j+1;
           }
           else
            if (map.containsKey(sum)) {
                len = Math.max(len, j - map.get(sum));
            } else {
                map.put(sum, j);
            }
        }
        return len;
    }
    //Brute force approach 
     int maxLen(int arr[], int n)
    {
       int length=0;
        int sum=0;
           for (int i=0;i<n;i++){
               for (int j=i;j<n;j++){
                   sum+=arr[j];
                   if(sum==0){
                       length=Math.max(length,j-i+1);

                   }

               }
               sum=0;
           }
           return length;
    }
   public static void main(String args[]) {
        LargestSubarrayWithZeroSum X = new LargestSubarrayWithZeroSum();
        int[] C = {15,-2,2,-8,1,7,10,23};
        System.out.println(X.maxLen(C, C.length));
    
    }
}
