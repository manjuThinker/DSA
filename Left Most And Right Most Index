import java.util.*;

class LeftMostAndRightMostIndex {
    class pair  {
        long first, second;
        public pair(long first, long second)
        {
            this.first = first;
            this.second = second;
        }
    }
    
    // Easy java solution1
     public pair indexes(long v[], long x){
        ArrayList<Long> list = new ArrayList<>();

        long a,b;
        for (long e: v){
            list.add(e);
        }
        a=list.indexOf(x);
        b=list.lastIndexOf(x);
        return new pair (a,b);
    }
    
//solution 2
    public pair indexes(long v[], long x)
    {  int size=0, low=0, high=0;
        for(int i = 0 ; i < v.length ; i++) {
            if (v[i] == x) {
                low = i;
                size++;
                break;
            }
        }

        for(int i = v.length-1 ; i >=0 ; i--){
                if(v[i] == x) {
                   high = i;
                    size++;
                    break;
                }
        }

        if(size==0){
           pair p=new pair(-1,-1);
            return p;
        }

        return new pair(low,high);
    }

        public static void main(String args[]) {
            LeftMostAndRightMostIndex X = new LeftMostAndRightMostIndex();
            long [] C = {1, 3, 5, 5, 5, 5, 67, 123, 125};
            System.out.println(X.indexes(C,5));

        }
}

