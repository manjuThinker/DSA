import java.util.*;

public class FirstElementToOccurKtimes {
    public int firstElementKTime(int[] a, int n, int k) {
        HashMap<Integer, Integer> count = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (count.containsKey(a[i])) {
                count.put(a[i], count.get(a[i]) + 1);
            } else count.put(a[i], 1);
        }
       /* System.out.println(Arrays.asList(count));*/

        for (int i = 0; i < n; i++) {
            if (count.containsKey(a[i])) {
                if (count.get(a[i]) == k)
                    return a[i];
            }
        }
        return -1;
    }

    public static void main(String args[]) {
        FirstElementToOccurKtimes X = new FirstElementToOccurKtimes();
        int[] C = {4, 2, 2, 2, 3, 4, 4, 4, 3, 2};
        /* long[] B = {1, 2, 3, 9};*/
        /*X.find(C, C.length,5);*/
        System.out.println(X.firstElementKTime(C, C.length - 1, 3));
        /*System.out.println(B.length);*/
    }
}
------------------------------------------------------
but Excuted code in GFG

lass Solution
{
    public int firstElementKTime(int[] a, int n, int k) { 
        int[] freq = new int[100001];

        for (int i : a) {
            freq[i]++;
            if (freq[i] == k) return i;
        }

        return -1;
    } 
}
