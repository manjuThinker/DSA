import java.util.*;

class PairsWithPositiveNegativeValues {

    public long[] PosNegPair(long a[], long n)
    {   
      HashMap<Long,Integer> count=new HashMap<>();
        for (int i=0;i<n;i++) {
            long abs=a[i];
            if (count.containsKey(abs)) {
                count.put(abs, count.get(abs)+1);
            }
            else {
                count.put(abs, 1);
            }
        }
        ArrayList<Long> al=new ArrayList<>();
       /* System.out.println(Arrays.asList(count));*/
        for (int i=0;i<n;i++) {
            if(count.containsKey(a[i]) && count.containsKey(-a[i]) && a[i]>=0) {
                al.add(-a[i]);
                al.add(+a[i]);
               if(count.get(a[i])==1) {
                   count.remove(a[i]);
               } 
               else if (count.get(-a[i])==1) {
                   count.remove(-a[i]);
               }
               else {
                   count.put(a[i], count.get(a[i]) - 1);
                   count.put(-a[i], count.get(-a[i]) - 1);
               }
            }
        }
        Collections.sort(al);
        long[] result=new long[al.size()];
        int z=0;
        int k=al.size()/2;
        while (k< al.size() && z<al.size()){
            result[z++]=-al.get(k);
            result[z++]=al.get(k);
            k++;

        }

      /*  System.out.println(al);
        System.out.println(Arrays.toString(result));*/

        return result;
    }
    public static void main(String args[]) {
        PairsWithPositiveNegativeValues X = new PairsWithPositiveNegativeValues();
        long[] C= {1, -3, 2, 3, 6, -1, -3, 3};
        System.out.println(X.PosNegPair(C,C.length));

    }


}

