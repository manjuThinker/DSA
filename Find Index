Given an unsorted array Arr[] of N integers and a Key which is present in this array. You need to write a program to find the start index( index where the element is first found from left in the array ) and end index( index where the element is first found from right in the array ).If the key does not exist in the array then return -1 for both start and end index in this case.

Example 1:

Input:
N = 6
arr[] = { 1, 2, 3, 4, 5, 5 }
Key = 5
Output:  4 5
Explanation:
5 appears first time at index 4 and
appears last time at index 5.
(0 based indexing)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import java.util.Arrays;
import java.util.List;

public class Reversewords {

    static int[] findIndex(int a[], int N, int key)
    {

       /*List al=Arrays.asList(a);
        int[] result = new int[3];
        System.out.println(al.toString());
        return result;*/


        int[] result=new int[3];
        for(int i=0;i<N;i++){
            if(a[i]==key) {
                result[0] = i;
                break;
            }
            else result[0]=-1;
            for (int j=N-1;j>0;j--)
            if(a[j]==key) {
                result[1] = j;
                break;
            }
            else result[0]=-1;
        }
        for(int i=0;i< result.length;i++){
            System.out.println(result[i]);
        }
        return result;
    }

    public static void main(String args[]){
            Reversewords I=new Reversewords();
            int[] C= {4, 4,2, 1, 2,5, 3};
            I.findIndex(C, C.length, 4);
            /*R.reverseWords("i like this.program.very.much") ;*/
            System.out.println();
           /* System.out.println(R.lastIndex("AAAggge"));*/

    }

}
